apiVersion: v1
kind: Namespace
metadata:
  name: emqx
---
apiVersion: apps.emqx.io/v2beta1
kind: EMQX
metadata:
  name: emqx
  namespace: emqx
spec:
  image: emqx/emqx-enterprise:5.8.0
  config:
    data: |
      log.console.level = warning
      listeners.ssl.default.enable = false
      listeners.ws.default.enable = false
      listeners.wss.default.enable = false
      durable_sessions.enable = true
      license {
        key = "file:///mnt/license/emqx.lic"
      }
  coreTemplate:
    spec:
      replicas: 2
      volumeClaimTemplates:
        storageClassName: ebs-sc
        resources:
          requests:
            storage: 10Gi
        accessModes:
          - ReadWriteOnce
      extraVolumes:
        - name: emqx-license
          secret:
            secretName: emqx-license
      extraVolumeMounts:
        - name: emqx-license
          mountPath: /mnt/license
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: emqx
  # replicantTemplate:
  #   spec:
  #     replicas: 3
  dashboardServiceTemplate:
    metadata:
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: external
        service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    spec:
      type: LoadBalancer
      loadBalancerClass: service.k8s.aws/nlb
  listenersServiceTemplate:
    metadata:
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: external
        service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    spec:
      type: LoadBalancer
      loadBalancerClass: service.k8s.aws/nlb
